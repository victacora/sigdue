package com.sigdue.db;

import org.greenrobot.greendao.annotation.*;

import org.greenrobot.greendao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END

/**
 * Entity mapped to table "PERSONA".
 */
@Entity(active = true)
public class Persona {

    @Id
    private long id_persona;
    private String propietario;
    private String placa;
    private String login;
    private String password;
    private String id_tipo_identificacion;

    @Unique
    private String no_identificacion;
    private String nombre1;
    private String nombre2;
    private String apellido1;
    private String apellido2;
    private String telefono;
    private String direccion;
    private String tipo;
    private String estado;
    private Long id_dispositivo;
    private String nom_dispositivo;
    private String id_municipio;

    /** Used to resolve relations */
    @Generated
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    @Generated
    private transient PersonaDao myDao;

    @ToOne(joinProperty = "id_tipo_identificacion")
    private TipoIdentificacion tipoIdentificacion;

    @Generated
    private transient String tipoIdentificacion__resolvedKey;

    @ToOne(joinProperty = "id_municipio")
    private Municipio municipio;

    @Generated
    private transient String municipio__resolvedKey;

    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    @Generated
    public Persona() {
    }

    public Persona(long id_persona) {
        this.id_persona = id_persona;
    }

    @Generated
    public Persona(long id_persona, String propietario, String placa, String login, String password, String id_tipo_identificacion, String no_identificacion, String nombre1, String nombre2, String apellido1, String apellido2, String telefono, String direccion, String tipo, String estado, Long id_dispositivo, String nom_dispositivo, String id_municipio) {
        this.id_persona = id_persona;
        this.propietario = propietario;
        this.placa = placa;
        this.login = login;
        this.password = password;
        this.id_tipo_identificacion = id_tipo_identificacion;
        this.no_identificacion = no_identificacion;
        this.nombre1 = nombre1;
        this.nombre2 = nombre2;
        this.apellido1 = apellido1;
        this.apellido2 = apellido2;
        this.telefono = telefono;
        this.direccion = direccion;
        this.tipo = tipo;
        this.estado = estado;
        this.id_dispositivo = id_dispositivo;
        this.nom_dispositivo = nom_dispositivo;
        this.id_municipio = id_municipio;
    }

    /** called by internal mechanisms, do not call yourself. */
    @Generated
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getPersonaDao() : null;
    }

    public long getId_persona() {
        return id_persona;
    }

    public void setId_persona(long id_persona) {
        this.id_persona = id_persona;
    }

    public String getPropietario() {
        return propietario;
    }

    public void setPropietario(String propietario) {
        this.propietario = propietario;
    }

    public String getPlaca() {
        return placa;
    }

    public void setPlaca(String placa) {
        this.placa = placa;
    }

    public String getLogin() {
        return login;
    }

    public void setLogin(String login) {
        this.login = login;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public String getId_tipo_identificacion() {
        return id_tipo_identificacion;
    }

    public void setId_tipo_identificacion(String id_tipo_identificacion) {
        this.id_tipo_identificacion = id_tipo_identificacion;
    }

    public String getNo_identificacion() {
        return no_identificacion;
    }

    public void setNo_identificacion(String no_identificacion) {
        this.no_identificacion = no_identificacion;
    }

    public String getNombre1() {
        return nombre1;
    }

    public void setNombre1(String nombre1) {
        this.nombre1 = nombre1;
    }

    public String getNombre2() {
        return nombre2;
    }

    public void setNombre2(String nombre2) {
        this.nombre2 = nombre2;
    }

    public String getApellido1() {
        return apellido1;
    }

    public void setApellido1(String apellido1) {
        this.apellido1 = apellido1;
    }

    public String getApellido2() {
        return apellido2;
    }

    public void setApellido2(String apellido2) {
        this.apellido2 = apellido2;
    }

    public String getTelefono() {
        return telefono;
    }

    public void setTelefono(String telefono) {
        this.telefono = telefono;
    }

    public String getDireccion() {
        return direccion;
    }

    public void setDireccion(String direccion) {
        this.direccion = direccion;
    }

    public String getTipo() {
        return tipo;
    }

    public void setTipo(String tipo) {
        this.tipo = tipo;
    }

    public String getEstado() {
        return estado;
    }

    public void setEstado(String estado) {
        this.estado = estado;
    }

    public Long getId_dispositivo() {
        return id_dispositivo;
    }

    public void setId_dispositivo(Long id_dispositivo) {
        this.id_dispositivo = id_dispositivo;
    }

    public String getNom_dispositivo() {
        return nom_dispositivo;
    }

    public void setNom_dispositivo(String nom_dispositivo) {
        this.nom_dispositivo = nom_dispositivo;
    }

    public String getId_municipio() {
        return id_municipio;
    }

    public void setId_municipio(String id_municipio) {
        this.id_municipio = id_municipio;
    }

    /** To-one relationship, resolved on first access. */
    @Generated
    public TipoIdentificacion getTipoIdentificacion() {
        String __key = this.id_tipo_identificacion;
        if (tipoIdentificacion__resolvedKey == null || tipoIdentificacion__resolvedKey != __key) {
            __throwIfDetached();
            TipoIdentificacionDao targetDao = daoSession.getTipoIdentificacionDao();
            TipoIdentificacion tipoIdentificacionNew = targetDao.load(__key);
            synchronized (this) {
                tipoIdentificacion = tipoIdentificacionNew;
            	tipoIdentificacion__resolvedKey = __key;
            }
        }
        return tipoIdentificacion;
    }

    @Generated
    public void setTipoIdentificacion(TipoIdentificacion tipoIdentificacion) {
        synchronized (this) {
            this.tipoIdentificacion = tipoIdentificacion;
            id_tipo_identificacion = tipoIdentificacion == null ? null : tipoIdentificacion.getId_tipo_identificacion();
            tipoIdentificacion__resolvedKey = id_tipo_identificacion;
        }
    }

    /** To-one relationship, resolved on first access. */
    @Generated
    public Municipio getMunicipio() {
        String __key = this.id_municipio;
        if (municipio__resolvedKey == null || municipio__resolvedKey != __key) {
            __throwIfDetached();
            MunicipioDao targetDao = daoSession.getMunicipioDao();
            Municipio municipioNew = targetDao.load(__key);
            synchronized (this) {
                municipio = municipioNew;
            	municipio__resolvedKey = __key;
            }
        }
        return municipio;
    }

    @Generated
    public void setMunicipio(Municipio municipio) {
        synchronized (this) {
            this.municipio = municipio;
            id_municipio = municipio == null ? null : municipio.getId_municipio();
            municipio__resolvedKey = id_municipio;
        }
    }

    /**
    * Convenient call for {@link org.greenrobot.greendao.AbstractDao#delete(Object)}.
    * Entity must attached to an entity context.
    */
    @Generated
    public void delete() {
        __throwIfDetached();
        myDao.delete(this);
    }

    /**
    * Convenient call for {@link org.greenrobot.greendao.AbstractDao#update(Object)}.
    * Entity must attached to an entity context.
    */
    @Generated
    public void update() {
        __throwIfDetached();
        myDao.update(this);
    }

    /**
    * Convenient call for {@link org.greenrobot.greendao.AbstractDao#refresh(Object)}.
    * Entity must attached to an entity context.
    */
    @Generated
    public void refresh() {
        __throwIfDetached();
        myDao.refresh(this);
    }

    @Generated
    private void __throwIfDetached() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }
    }

    // KEEP METHODS - put your custom methods here
    public String toString() {
        return getPlaca() + ". " + getNombre1() + " " + getNombre2() + " " + getApellido1() + " " + getApellido2() + " ";
    }
    // KEEP METHODS END

}

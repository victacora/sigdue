package com.sigdue.db;

import org.greenrobot.greendao.annotation.*;

import org.greenrobot.greendao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END

/**
 * Entity mapped to table "MUNICIPIO".
 */
@Entity(active = true)
public class Municipio {

    @Id
    @NotNull
    private String id_municipio;
    private String id_departamento;
    private String nom_municipio;

    /** Used to resolve relations */
    @Generated
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    @Generated
    private transient MunicipioDao myDao;

    @ToOne(joinProperty = "id_departamento")
    private Departamento departamento;

    @Generated
    private transient String departamento__resolvedKey;

    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    @Generated
    public Municipio() {
    }

    public Municipio(String id_municipio) {
        this.id_municipio = id_municipio;
    }

    @Generated
    public Municipio(String id_municipio, String id_departamento, String nom_municipio) {
        this.id_municipio = id_municipio;
        this.id_departamento = id_departamento;
        this.nom_municipio = nom_municipio;
    }

    /** called by internal mechanisms, do not call yourself. */
    @Generated
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getMunicipioDao() : null;
    }

    @NotNull
    public String getId_municipio() {
        return id_municipio;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setId_municipio(@NotNull String id_municipio) {
        this.id_municipio = id_municipio;
    }

    public String getId_departamento() {
        return id_departamento;
    }

    public void setId_departamento(String id_departamento) {
        this.id_departamento = id_departamento;
    }

    public String getNom_municipio() {
        return nom_municipio;
    }

    public void setNom_municipio(String nom_municipio) {
        this.nom_municipio = nom_municipio;
    }

    /** To-one relationship, resolved on first access. */
    @Generated
    public Departamento getDepartamento() {
        String __key = this.id_departamento;
        if (departamento__resolvedKey == null || departamento__resolvedKey != __key) {
            __throwIfDetached();
            DepartamentoDao targetDao = daoSession.getDepartamentoDao();
            Departamento departamentoNew = targetDao.load(__key);
            synchronized (this) {
                departamento = departamentoNew;
            	departamento__resolvedKey = __key;
            }
        }
        return departamento;
    }

    @Generated
    public void setDepartamento(Departamento departamento) {
        synchronized (this) {
            this.departamento = departamento;
            id_departamento = departamento == null ? null : departamento.getId_departamento();
            departamento__resolvedKey = id_departamento;
        }
    }

    /**
    * Convenient call for {@link org.greenrobot.greendao.AbstractDao#delete(Object)}.
    * Entity must attached to an entity context.
    */
    @Generated
    public void delete() {
        __throwIfDetached();
        myDao.delete(this);
    }

    /**
    * Convenient call for {@link org.greenrobot.greendao.AbstractDao#update(Object)}.
    * Entity must attached to an entity context.
    */
    @Generated
    public void update() {
        __throwIfDetached();
        myDao.update(this);
    }

    /**
    * Convenient call for {@link org.greenrobot.greendao.AbstractDao#refresh(Object)}.
    * Entity must attached to an entity context.
    */
    @Generated
    public void refresh() {
        __throwIfDetached();
        myDao.refresh(this);
    }

    @Generated
    private void __throwIfDetached() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }
    }

    // KEEP METHODS - put your custom methods here
    public String toString() {
        return getId_municipio() + ". " + getNom_municipio();
    }
    // KEEP METHODS END

}
